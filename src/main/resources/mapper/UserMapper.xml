<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aimlab.mapper.UserMapper">
    <!-- 结果映射 -->
    <resultMap id="userMap" type="com.aimlab.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="role" column="role"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="lastLoginAt" column="last_login_at"/>
    </resultMap>

    <resultMap id="adminUserMap" type="com.aimlab.dto.AdminUserDTO">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="role" column="role"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="lastLoginAt" column="last_login_at"/>
        <result property="athleteId" column="athlete_id"/>
        <result property="athleteName" column="athlete_name"/>
    </resultMap>
    
    <!-- 根据用户名查询用户 -->
    <select id="findByUsername" resultMap="userMap">
        SELECT * FROM users WHERE username = #{username}
    </select>
    
    <!-- 插入新用户 -->
    <insert id="insert" parameterType="com.aimlab.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (username, password, role, status, created_at, updated_at, last_login_at)
        VALUES (#{username}, #{password}, #{role}, #{status}, #{createdAt}, #{updatedAt}, #{lastLoginAt})
    </insert>
    
    <!-- 根据ID查询用户 -->
    <select id="findById" resultMap="userMap">
        SELECT * FROM users WHERE id = #{id}
    </select>
    
    <!-- 更新用户信息 -->
    <update id="update" parameterType="com.aimlab.entity.User">
        UPDATE users
        SET username = #{username},
            password = #{password},
            role = #{role},
            status = #{status},
            updated_at = #{updatedAt},
            last_login_at = #{lastLoginAt}
        WHERE id = #{id}
    </update>

    <!-- 查询所有用户 -->
    <select id="findAll" resultMap="userMap">
        SELECT * FROM users ORDER BY created_at DESC
    </select>

    <!-- 统计用户总数 -->
    <select id="countAll" resultType="long">
        SELECT COUNT(*) FROM users
    </select>

    <!-- 按角色统计用户数量 -->
    <select id="countByRole" resultType="long">
        SELECT COUNT(*) FROM users WHERE role = #{role}
    </select>

    <!-- 根据筛选条件查询用户（管理员视图） -->
    <select id="findAdminUsers" resultMap="adminUserMap">
        SELECT
            u.id,
            u.username,
            u.role,
            u.status,
            u.created_at,
            u.updated_at,
            u.last_login_at,
            a.id AS athlete_id,
            a.name AS athlete_name
        FROM users u
        LEFT JOIN athletes a ON a.user_id = u.id
        <where>
            <if test="username != null and username != ''">
                AND u.username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="role != null and role != ''">
                AND u.role = #{role}
            </if>
            <if test="status != null">
                AND u.status = #{status}
            </if>
        </where>
        ORDER BY u.created_at DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
        <if test="offset != null">
            OFFSET #{offset}
        </if>
    </select>

    <!-- 根据筛选条件统计用户数量 -->
    <select id="countAdminUsers" resultType="long">
        SELECT COUNT(*)
        FROM users u
        <where>
            <if test="username != null and username != ''">
                AND u.username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="role != null and role != ''">
                AND u.role = #{role}
            </if>
            <if test="status != null">
                AND u.status = #{status}
            </if>
        </where>
    </select>

    <!-- 更新用户状态 -->
    <update id="updateStatus">
        UPDATE users
        SET status = #{status},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- 更新用户角色 -->
    <update id="updateRole">
        UPDATE users
        SET role = #{role},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- 更新用户密码 -->
    <update id="updatePassword">
        UPDATE users
        SET password = #{password},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- 删除用户 -->
    <delete id="deleteById">
        DELETE FROM users WHERE id = #{id}
    </delete>

    <!-- 更新最近登录时间 -->
    <update id="updateLastLoginAt">
        UPDATE users
        SET last_login_at = #{lastLoginAt},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>
</mapper>
